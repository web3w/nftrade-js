import { RevertError,ExchangeRevertErrors,decodeBytesAsRevertError } from '@txdev/0x-utils'



const encodeError = '0x4678472bef8a5af291dcf89cb64cdd3d6737c5ddd43c752a9e60198b5171a6a40c85dbc0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000124a7cb5fb7000000000000000000000000991a868aa7b0a9a24565ede2d8fe758874a6a217000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008408c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000032455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564000000000000000000000000000000000000000000000000000000000000000000000000000000000000'

const mm = "0x339f3de2000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000001"

const revert = decodeBytesAsRevertError(encodeError,true)

console.log(revert.message)

//makerAssetBuyAmount
console.log("numerator",revert.values.numerator?.toString())
//totalMakerAssetAcquiredAmount
console.log("denominator",revert.values.denominator?.toString())
console.log("target",revert.values.target?.toString())

//makerAssetBuyAmount
console.log("expectedAssetBuyAmount",revert.values.expectedAssetBuyAmount?.toString())
//totalMakerAssetAcquiredAmount
console.log("actualAssetBuyAmount",revert.values.actualAssetBuyAmount?.toString())

// CompleteBuyFailedError({
//   expectedAssetBuyAmount: BigNumber { s: 1, e: 13, c: [ 10000000000000 ] },
// actualAssetBuyAmount: BigNumber { s: 1, e: 0, c: [ 1 ] }
// })

