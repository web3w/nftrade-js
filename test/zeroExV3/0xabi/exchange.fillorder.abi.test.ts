import { contractAbi } from '../../../src/contracts/abi'

import {
  AbiDefinition,
  AbiType,
  BlockParam,
  CallData,
  ConstructorAbi,
  ContractAbi,
  DataItem,
  MethodAbi,
  SupportedProvider,
  TransactionReceiptWithDecodedLogs,
  TxData,
  TxDataPayable
} from 'ethereum-types'

import { DecodingRules,AbiEncoder } from '@txdev/0x-utils'

// https://bscscan.com/tx/0x548e77c678e9bdf5e2d1f6c3c4305e5b5747f1829afe6708f6967a5fdd2ec92b
// fillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),uint256,bytes) 0x9b44d556
const matchOrderInput = '0x9b44d55600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000000000000000000340000000000000000000000000d6792df4e2d5cccfb4962030ba3fce4628e5266f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001bc16d674ec80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017b32771f48bf64e66128832d12750e8d9975f1984dc2e901a96e1e211befff4def8e790d7100000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000000440257179200000000000000000000000044d85770aea263f9463418708125cd95e308299b00000000000000000000000000000000000000000000000000000000000010a8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000421bbd5114ea201ae9cefb57bbf777fdd5516e0d8cb44885d6e31aec2f97a1379096379c68675be98396d10867f1e72ce2e7fc4c08766eff885d2f0a70f0a229940902000000000000000000000000000000000000000000000000000000000000'


const matchOrderSeleter = matchOrderInput.substring(0,10)

const methodAbis = contractAbi.exchange.abi.filter(
  (abiDefinition: AbiDefinition) => abiDefinition.type === AbiType.Function
) as MethodAbi[]

methodAbis.find(methodAbi => {
  const abiEncoder = new AbiEncoder.Method(methodAbi)
  const functionSignature = abiEncoder.getSignature()
  const functionSelector = abiEncoder.getSelector()
  console.log(functionSignature, functionSelector)
  if(matchOrderSeleter ==functionSelector){
    // @ts-ignore
    const rules:DecodingRules = {
      shouldConvertStructsToObjects: true,
      isStrictMode: true
    }
    const decodeList =  abiEncoder.decode(matchOrderInput,rules)
    console.log(decodeList)
    return true
  }
  return false
})


// const abiEncodedArguments = abiEncoder.encode(functionArguments);
