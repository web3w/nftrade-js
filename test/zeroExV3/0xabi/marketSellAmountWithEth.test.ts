import { contractAbi } from '../../../src/contracts/abi'

import {
  AbiDefinition,
  AbiType,
  BlockParam,
  CallData,
  ConstructorAbi,
  ContractAbi,
  DataItem,
  MethodAbi,
  SupportedProvider,
  TransactionReceiptWithDecodedLogs,
  TxData,
  TxDataPayable
} from 'ethereum-types'
import { DecodingRules,AbiEncoder } from '@txdev/0x-utils'

// https://cn.etherscan.com/tx/0x5d409ce030da42df762352be02d790233953c91a22f122624cace791f205ff73
// marketSellAmountWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],uint256,bytes[],uint256[],address[]) 0x939ce6ba
 const matchOrderInput = '0x939ce6ba00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000004200000000000000000000000000000000000000000000000000000000000000420000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000006924a03bb710eaf199ab6ac9f2bb148215ae9b5d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000119f25fd7ebc6a400000000000000000000000000000000000000000000000000022a41089fc651049500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005e838c6f0000000000000000000000000000000000000000000000000000017131dabfd800000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000024f47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000421bdadd5af4c6fa2c073a80e71eaaab4c8e58d840c172ff3b754545180e35c85fc703e77bec769737d3c657fdc3196d017a0c6e587368225bc50b36c565416a41130300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000869584cd00000000000000000000000086003b044f70dac0abc80ac8957305b6370893ed000000000000000000000000000000000000000000000000000000005e838bfa'


const matchOrderSeleter = matchOrderInput.substring(0,10)

const methodAbis = contractAbi.forwarder.abi.filter(
  (abiDefinition: AbiDefinition) => abiDefinition.type === AbiType.Function
) as MethodAbi[]

methodAbis.find(methodAbi => {
  const abiEncoder = new AbiEncoder.Method(methodAbi)
  const functionSignature = abiEncoder.getSignature()
  const functionSelector = abiEncoder.getSelector()
  console.log(functionSignature, functionSelector)
  if(matchOrderSeleter ==functionSelector){
    // @ts-ignore
    const rules:DecodingRules = {
      shouldConvertStructsToObjects: true,
      isStrictMode: true
    }
    const decodeList =  abiEncoder.decode(matchOrderInput,rules)
    console.log("\n",decodeList,"\n")

  }
  return false
})



// sender 0x8a333a18B924554D6e83EF9E9944DE6260f61D3B

// 0x6924a03bb710eaf199ab6ac9f2bb148215ae9b5d sell WETH
// {
//   orders: [
//     {
//       makerAddress: '0x6924a03bb710eaf199ab6ac9f2bb148215ae9b5d',
//       takerAddress: '0x0000000000000000000000000000000000000000',
//       feeRecipientAddress: '0x1000000000000000000000000000000000000011',
//       senderAddress: '0x0000000000000000000000000000000000000000',
//       makerAssetAmount: 5201000000000000000000, //DAI 5201e18
//       takerAssetAmount: 39938212452818289813, // ETH 39e18
//       makerFee: 0,
//       takerFee: 0,
//       expirationTimeSeconds: 1585679471,
//       salt: 1585679351768,
//       makerAssetData: '0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f', // DAI  ERC20Token(address)
//       takerAssetData: '0xf47261b0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // WETH ERC20Token(address)
//       makerFeeAssetData: '0x',
//       takerFeeAssetData: '0x'
//     }
//   ],
//     ethSellAmount: 10000000000000000,  // 0.01 ETH
//   signatures: [
//   '0x1bdadd5af4c6fa2c073a80e71eaaab4c8e58d840c172ff3b754545180e35c85fc703e77bec769737d3c657fdc3196d017a0c6e587368225bc50b36c565416a411303'
// ],
//   ethFeeAmounts: [ 0 ],
//   feeRecipients: [ '0x0000000000000000000000000000000000000000' ]
// }
