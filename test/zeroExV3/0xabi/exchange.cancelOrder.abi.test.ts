import { contractAbi } from '../../../src/contracts/abi'

import {
  AbiDefinition,
  AbiType,
  BlockParam,
  CallData,
  ConstructorAbi,
  ContractAbi,
  DataItem,
  MethodAbi,
  SupportedProvider,
  TransactionReceiptWithDecodedLogs,
  TxData,
  TxDataPayable
} from 'ethereum-types'

import { DecodingRules,AbiEncoder } from '@txdev/0x-utils'
// https://bscscan.com/tx/0x4b5c15cbe63cd03249ad5d92a8bf327db6f4a0c3cd95f5d71990874fe0bce72a
//cancelOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)) 0x2da62987
// const matchOrderInput = '0x2da6298700000000000000000000000000000000000000000000000000000000000000200000000000000000000000001610e58ecefeb51365c3893bfe3be61acdd220a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001bc16d674ec80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017b385235b77afbd96ae7df11361aa570532a4566a59ab7a621e4f633493af433c2f6e2456c00000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000000440257179200000000000000000000000044d85770aea263f9463418708125cd95e308299b000000000000000000000000000000000000000000000000000000000000118d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'

const matchOrderInput = '0x2da62987000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000415a0cb67f8654b46c36dbd23eda07dd3d7df5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000415a0cb67f8654b46c36dbd23eda07dd3d7df500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000001ff973cafa8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000000000000061cc4c3b0000000000000000000000000000000000000000000000000000017d94cc482e00000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002c00000000000000000000000000000000000000000000000000000000000000044025717920000000000000000000000009361d366cd497bcdfbd16e8bec3cd173c4ca948e0000000000000000000000000000000000000000000000000000000000000222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd00000000000000000000000000000000000000000000000000000000'

  // const matchOrderInput = '0x2da6298700000000000000000000000000000000000000000000000000000000000000200000000000000000000000000a56b3317ed60dc4e1027a63ffbe9df6fb10240100000000000000000000000000000000000000000000000000000000000000000000000000000000000000008131023e40626b26d2e2f921b420f0a8da21c9720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000f018b36af74000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000004402571792000000000000000000000000066561b3369fa33e56d58c3fce621ff82b4cdd3f0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004402571792000000000000000000000000066561b3369fa33e56d58c3fce621ff82b4cdd3f0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd00000000000000000000000000000000000000000000000000000000'


const matchOrderSeleter = matchOrderInput.substring(0,10)

const methodAbis = contractAbi.exchange.abi.filter(
  (abiDefinition: AbiDefinition) => abiDefinition.type === AbiType.Function
) as MethodAbi[]

methodAbis.find(methodAbi => {
  const abiEncoder = new AbiEncoder.Method(methodAbi)
  const functionSignature = abiEncoder.getSignature()
  const functionSelector = abiEncoder.getSelector()
  console.log(functionSignature, functionSelector)
  if(matchOrderSeleter ==functionSelector){
    // @ts-ignore
    const rules:DecodingRules = {
      shouldConvertStructsToObjects: true,
      isStrictMode: false
    }
    const decodeList =  abiEncoder.decode(matchOrderInput,rules)
    console.log(JSON.stringify(decodeList,null,2))
    return true
  }
  return false
})
// {
//   order: {
//     makerAddress: '0x00415a0cb67f8654b46c36dbd23eda07dd3d7df5',
//       takerAddress: '0x0000000000000000000000000000000000000000',
//       feeRecipientAddress: '0x0000000000000000000000000000000000000000',
//       senderAddress: '0x0000000000000000000000000000000000000000',
//       makerAssetAmount: BigNumber { s: 1, e: 0, c: [Array] },
//     takerAssetAmount: BigNumber { s: 1, e: 16, c: [Array] },
//     makerFee: BigNumber { s: 1, e: 0, c: [Array] },
//     takerFee: BigNumber { s: 1, e: 0, c: [Array] },
//     expirationTimeSeconds: BigNumber { s: 1, e: 9, c: [Array] },
//     salt: BigNumber { s: 1, e: 12, c: [Array] },
//     makerAssetData: '0x025717920000000000000000000000009361d366cd497bcdfbd16e8bec3cd173c4ca948e0000000000000000000000000000000000000000000000000000000000000222',
//       takerAssetData: '0xf47261b0000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd',
//       makerFeeAssetData: '0x',
//       takerFeeAssetData: '0x'
//   }
// }

// const abiEncodedArguments = abiEncoder.encode(functionArguments);
