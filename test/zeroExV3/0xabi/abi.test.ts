import { contractAbi } from '../../../src/contracts/abi'

import {
  AbiDefinition,
  AbiType,
  BlockParam,
  CallData,
  ConstructorAbi,
  ContractAbi,
  DataItem,
  MethodAbi,
  SupportedProvider,
  TransactionReceiptWithDecodedLogs,
  TxData,
  TxDataPayable
} from 'ethereum-types'

import { DecodingRules,AbiEncoder } from '@txdev/0x-utils'

const matchOrderInput = '0xbbbfa60c00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000092000000000000000000000000000000000000000000000000000000000000009a00000000000000000000000000000000000000000000000000000000000000a200000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f6190000000000000000000000001a20b32fde1edfab1f84b325379a7c5609abc49b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f715beb51ec8f63317d66f491e37e7bb048fcc2d000000000000000000000000f715beb51ec8f63317d66f491e37e7bb048fcc2d0000000000000000000000000000000000000000000000000001c6bf5263400000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000617aa590000000000000000000000000000000000000000000000000010050876bea139500000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000024f47261b00000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f619000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000144a7cb5fb70000000000000000000000008a7771fdc861d6502c9f5ad2254d5060c3e782f4000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000cdb3e3f10fad9db3a2da202ddfe62e6a05b860870000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f715beb51ec8f63317d66f491e37e7bb048fcc2d000000000000000000000000f715beb51ec8f63317d66f491e37e7bb048fcc2d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001c6bf52634000000000000000000000000000000000000000000000000000000038d7ea4c6800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000617aa59000000000000000000000000000000000000000000000000000600925e5c9754d00000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000144a7cb5fb70000000000000000000000008a7771fdc861d6502c9f5ad2254d5060c3e782f4000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000cf47261b00000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f619000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b00000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f619000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000421bb3db3368243d6680ae88cee2f765c5527a7a938bb88adc617f251aa3a0ad906437a2181022d48656bf0dfe8829b673c402a28bf7b20cde0cf415bd375500e14f0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000421b0b5d6725b722c9335db2e1510d77f843b23e49c4569ac5ef9f6dff205a7f640f78a08a8e44fbe9e1c8ad3834cf008418ecc5a4059ff92db7249b35b8a19ae2d50300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c0107300000000000000000000000000000000000000000000000000000b5e620f48000000000000000000000000000c7f6405bf7299a9ebdccfd6841feac6c91e554100000000000000000000000000000000000000000000000000002d79883d2000'


const matchOrderSeleter = matchOrderInput.substring(0,10)

const methodAbis = contractAbi.elementEx.abi.filter(
  (abiDefinition: AbiDefinition) => abiDefinition.type === AbiType.Function
) as MethodAbi[]

methodAbis.find(methodAbi => {
  const abiEncoder = new AbiEncoder.Method(methodAbi)
  const functionSignature = abiEncoder.getSignature()
  const functionSelector = abiEncoder.getSelector()
  console.log(functionSignature, functionSelector)
  if(matchOrderSeleter ==functionSelector){
    // @ts-ignore
    const rules:DecodingRules = {
      shouldConvertStructsToObjects: true,
      isStrictMode: true
    }
    const decodeList =  abiEncoder.decode(matchOrderInput,rules)
    console.log(decodeList)
    return true
  }
  return false
})


// const abiEncodedArguments = abiEncoder.encode(functionArguments);
